=== GPT-only pipeline for Time-12 ===
  📊 GPT[hypothesis H1] tokens: 81 prompt + 35 completion = 116 total
  📊 GPT[hypothesis H2] tokens: 81 prompt + 42 completion = 123 total
  📊 GPT[hypothesis H3] tokens: 81 prompt + 36 completion = 117 total
  📊 GPT[hypothesis H4] tokens: 81 prompt + 40 completion = 121 total
  📊 GPT[hypothesis H5] tokens: 81 prompt + 46 completion = 127 total
  📊 GPT[hypothesis_confidence H1] tokens: 96 prompt + 3 completion = 99 total
  📊 GPT[hypothesis_confidence H2] tokens: 103 prompt + 3 completion = 106 total
  📊 GPT[hypothesis_confidence H3] tokens: 97 prompt + 3 completion = 100 total
  📊 GPT[hypothesis_confidence H4] tokens: 101 prompt + 3 completion = 104 total
  📊 GPT[hypothesis_confidence H5] tokens: 107 prompt + 3 completion = 110 total
Hypotheses:
  H1 (confidence 0.700): Hypothesis H1: The failure may be caused by the `fromDateFields` method not properly handling dates with years before zero, leading to incorrect date conversions or exceptions.
  H2 (confidence 0.700): Hypothesis H2: The failure may be caused by the test not handling negative year values correctly, leading to an exception or incorrect behavior when constructing a LocalDateTime from a date with a year before zero.
  H3 (confidence 0.700): Hypothesis H3: The failure might be caused by the `fromDateFields` method not correctly handling dates with negative year values, leading to an incorrect LocalDateTime construction.
  H4 (confidence 0.700): Hypothesis H4: The failure may be caused by the `fromDateFields` method not correctly handling dates with negative year values, leading to incorrect LocalDateTime construction for dates before year zero.
  H5 (confidence 0.800): Hypothesis H5: The failure may be caused by the test attempting to construct a `LocalDateTime` object from a `Date` instance representing a year before zero, which is not supported by the underlying date-time library.
Ignoring 65 covered classes without method coverage
    ▶️ GPT[class pre-ranking] running 2 prompts
  📊 GPT[class_pre_rank org.joda.time.LocalDateTime] tokens: 806 prompt + 55 completion = 861 total
  📊 GPT[class_pre_rank org.joda.time.LocalDate] tokens: 822 prompt + 67 completion = 889 total
    ✅ GPT[class pre-ranking] completed; taking top 5
Candidate classes:
  org.joda.time.LocalDateTime: n/a ```json
{"score": 0.9, "reason": "The failure evidence indicates that the issue arises from incorrect handling of BC dates in the LocalDateTime.fromDateFields method, suggesting a bug in the LocalDateTime class's date conversion logic."}
```
  org.joda.time.LocalDate: n/a ```json
{"score": 0.9, "reason": "The failure occurs due to incorrect handling of BC dates in the fromDateFields method, as evidenced by the expected and actual year mismatch in the test. The LocalDate class, which includes this method, is the most likely location for the bug fix."}
```
Collected 14 methods across candidate classes
    ▶️ GPT[method pre-ranking] running 14 prompts
  📊 GPT[method_pre_rank org.joda.time.LocalDate.LocalDate(int,int,int)] tokens: 769 prompt + 59 completion = 828 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.LocalDate(int,int,int,Chronology)] tokens: 771 prompt + 64 completion = 835 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.equals(Object)] tokens: 763 prompt + 68 completion = 831 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.fromCalendarFields(Calendar)] tokens: 888 prompt + 49 completion = 937 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.fromDateFields(Date)] tokens: 897 prompt + 64 completion = 961 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.get(DateTimeFieldType)] tokens: 795 prompt + 69 completion = 864 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.getChronology()] tokens: 743 prompt + 65 completion = 808 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.getLocalMillis()] tokens: 742 prompt + 88 completion = 830 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.isSupported(DateTimeFieldType)] tokens: 762 prompt + 56 completion = 818 total
  📊 GPT[method_pre_rank org.joda.time.LocalDate.toString()] tokens: 749 prompt + 54 completion = 803 total
  📊 GPT[method_pre_rank org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int)] tokens: 931 prompt + 59 completion = 990 total
  📊 GPT[method_pre_rank org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology)] tokens: 904 prompt + 62 completion = 966 total
  📊 GPT[method_pre_rank org.joda.time.LocalDateTime.fromCalendarFields(Calendar)] tokens: 889 prompt + 69 completion = 958 total
  📊 GPT[method_pre_rank org.joda.time.LocalDateTime.fromDateFields(Date)] tokens: 903 prompt + 74 completion = 977 total
    ✅ GPT[method pre-ranking] completed
Selected 14 candidate methods
  📊 GPT[class_score org.joda.time.LocalDateTime H1] tokens: 525 prompt + 3 completion = 528 total
  📊 GPT[class_explanation org.joda.time.LocalDateTime H1] tokens: 503 prompt + 94 completion = 597 total
  📊 GPT[class_score org.joda.time.LocalDate H1] tokens: 541 prompt + 3 completion = 544 total
  📊 GPT[class_explanation org.joda.time.LocalDate H1] tokens: 519 prompt + 116 completion = 635 total
  📊 GPT[class_score org.joda.time.LocalDateTime H2] tokens: 532 prompt + 3 completion = 535 total
  📊 GPT[class_explanation org.joda.time.LocalDateTime H2] tokens: 510 prompt + 136 completion = 646 total
  📊 GPT[class_score org.joda.time.LocalDate H2] tokens: 548 prompt + 3 completion = 551 total
  📊 GPT[class_explanation org.joda.time.LocalDate H2] tokens: 526 prompt + 129 completion = 655 total
  📊 GPT[class_score org.joda.time.LocalDateTime H3] tokens: 526 prompt + 3 completion = 529 total
  📊 GPT[class_explanation org.joda.time.LocalDateTime H3] tokens: 504 prompt + 105 completion = 609 total
  📊 GPT[class_score org.joda.time.LocalDate H3] tokens: 542 prompt + 3 completion = 545 total
  📊 GPT[class_explanation org.joda.time.LocalDate H3] tokens: 520 prompt + 117 completion = 637 total
  📊 GPT[class_score org.joda.time.LocalDateTime H4] tokens: 530 prompt + 3 completion = 533 total
  📊 GPT[class_explanation org.joda.time.LocalDateTime H4] tokens: 508 prompt + 99 completion = 607 total
  📊 GPT[class_score org.joda.time.LocalDate H4] tokens: 546 prompt + 3 completion = 549 total
  📊 GPT[class_explanation org.joda.time.LocalDate H4] tokens: 524 prompt + 121 completion = 645 total
  📊 GPT[class_score org.joda.time.LocalDateTime H5] tokens: 536 prompt + 3 completion = 539 total
  📊 GPT[class_explanation org.joda.time.LocalDateTime H5] tokens: 514 prompt + 131 completion = 645 total
  📊 GPT[class_score org.joda.time.LocalDate H5] tokens: 552 prompt + 3 completion = 555 total
  📊 GPT[class_explanation org.joda.time.LocalDate H5] tokens: 530 prompt + 151 completion = 681 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H1] tokens: 696 prompt + 3 completion = 699 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H1] tokens: 584 prompt + 142 completion = 726 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromDateFields(Date) H1] tokens: 717 prompt + 3 completion = 720 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromDateFields(Date) H1] tokens: 591 prompt + 146 completion = 737 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H1] tokens: 706 prompt + 3 completion = 709 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H1] tokens: 611 prompt + 122 completion = 733 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H1] tokens: 721 prompt + 3 completion = 724 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H1] tokens: 597 prompt + 135 completion = 732 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H1] tokens: 544 prompt + 3 completion = 547 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H1] tokens: 520 prompt + 134 completion = 654 total
  📊 GPT[method_score org.joda.time.LocalDate.fromDateFields(Date) H1] tokens: 674 prompt + 3 completion = 677 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromDateFields(Date) H1] tokens: 590 prompt + 113 completion = 703 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int) H1] tokens: 542 prompt + 3 completion = 545 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int) H1] tokens: 518 prompt + 138 completion = 656 total
  📊 GPT[method_score org.joda.time.LocalDate.fromCalendarFields(Calendar) H1] tokens: 665 prompt + 3 completion = 668 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromCalendarFields(Calendar) H1] tokens: 582 prompt + 114 completion = 696 total
  📊 GPT[method_score org.joda.time.LocalDate.getLocalMillis() H1] tokens: 516 prompt + 3 completion = 519 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getLocalMillis() H1] tokens: 493 prompt + 107 completion = 600 total
  📊 GPT[method_score org.joda.time.LocalDate.equals(Object) H1] tokens: 537 prompt + 3 completion = 540 total
  📊 GPT[method_explanation org.joda.time.LocalDate.equals(Object) H1] tokens: 513 prompt + 109 completion = 622 total
  📊 GPT[method_score org.joda.time.LocalDate.get(DateTimeFieldType) H1] tokens: 568 prompt + 3 completion = 571 total
  📊 GPT[method_explanation org.joda.time.LocalDate.get(DateTimeFieldType) H1] tokens: 536 prompt + 127 completion = 663 total
  📊 GPT[method_score org.joda.time.LocalDate.getChronology() H1] tokens: 517 prompt + 3 completion = 520 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getChronology() H1] tokens: 494 prompt + 106 completion = 600 total
  📊 GPT[method_score org.joda.time.LocalDate.isSupported(DateTimeFieldType) H1] tokens: 536 prompt + 3 completion = 539 total
  📊 GPT[method_explanation org.joda.time.LocalDate.isSupported(DateTimeFieldType) H1] tokens: 512 prompt + 127 completion = 639 total
  📊 GPT[method_score org.joda.time.LocalDate.toString() H1] tokens: 523 prompt + 3 completion = 526 total
  📊 GPT[method_explanation org.joda.time.LocalDate.toString() H1] tokens: 500 prompt + 125 completion = 625 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H2] tokens: 703 prompt + 3 completion = 706 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H2] tokens: 591 prompt + 123 completion = 714 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromDateFields(Date) H2] tokens: 724 prompt + 3 completion = 727 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromDateFields(Date) H2] tokens: 598 prompt + 144 completion = 742 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H2] tokens: 713 prompt + 3 completion = 716 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H2] tokens: 618 prompt + 130 completion = 748 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H2] tokens: 728 prompt + 3 completion = 731 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H2] tokens: 604 prompt + 142 completion = 746 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H2] tokens: 551 prompt + 3 completion = 554 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H2] tokens: 527 prompt + 137 completion = 664 total
  📊 GPT[method_score org.joda.time.LocalDate.fromDateFields(Date) H2] tokens: 681 prompt + 3 completion = 684 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromDateFields(Date) H2] tokens: 597 prompt + 140 completion = 737 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int) H2] tokens: 549 prompt + 3 completion = 552 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int) H2] tokens: 525 prompt + 139 completion = 664 total
  📊 GPT[method_score org.joda.time.LocalDate.fromCalendarFields(Calendar) H2] tokens: 672 prompt + 3 completion = 675 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromCalendarFields(Calendar) H2] tokens: 589 prompt + 145 completion = 734 total
  📊 GPT[method_score org.joda.time.LocalDate.getLocalMillis() H2] tokens: 523 prompt + 3 completion = 526 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getLocalMillis() H2] tokens: 500 prompt + 121 completion = 621 total
  📊 GPT[method_score org.joda.time.LocalDate.equals(Object) H2] tokens: 544 prompt + 3 completion = 547 total
  📊 GPT[method_explanation org.joda.time.LocalDate.equals(Object) H2] tokens: 520 prompt + 117 completion = 637 total
  📊 GPT[method_score org.joda.time.LocalDate.get(DateTimeFieldType) H2] tokens: 575 prompt + 3 completion = 578 total
  📊 GPT[method_explanation org.joda.time.LocalDate.get(DateTimeFieldType) H2] tokens: 543 prompt + 111 completion = 654 total
  📊 GPT[method_score org.joda.time.LocalDate.getChronology() H2] tokens: 524 prompt + 3 completion = 527 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getChronology() H2] tokens: 501 prompt + 121 completion = 622 total
  📊 GPT[method_score org.joda.time.LocalDate.isSupported(DateTimeFieldType) H2] tokens: 543 prompt + 3 completion = 546 total
  📊 GPT[method_explanation org.joda.time.LocalDate.isSupported(DateTimeFieldType) H2] tokens: 519 prompt + 125 completion = 644 total
  📊 GPT[method_score org.joda.time.LocalDate.toString() H2] tokens: 530 prompt + 3 completion = 533 total
  📊 GPT[method_explanation org.joda.time.LocalDate.toString() H2] tokens: 507 prompt + 134 completion = 641 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H3] tokens: 697 prompt + 3 completion = 700 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H3] tokens: 585 prompt + 136 completion = 721 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromDateFields(Date) H3] tokens: 718 prompt + 3 completion = 721 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromDateFields(Date) H3] tokens: 592 prompt + 144 completion = 736 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H3] tokens: 707 prompt + 3 completion = 710 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H3] tokens: 612 prompt + 159 completion = 771 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H3] tokens: 722 prompt + 3 completion = 725 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H3] tokens: 598 prompt + 144 completion = 742 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H3] tokens: 545 prompt + 3 completion = 548 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H3] tokens: 521 prompt + 119 completion = 640 total
  📊 GPT[method_score org.joda.time.LocalDate.fromDateFields(Date) H3] tokens: 675 prompt + 3 completion = 678 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromDateFields(Date) H3] tokens: 591 prompt + 124 completion = 715 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int) H3] tokens: 543 prompt + 3 completion = 546 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int) H3] tokens: 519 prompt + 142 completion = 661 total
  📊 GPT[method_score org.joda.time.LocalDate.fromCalendarFields(Calendar) H3] tokens: 666 prompt + 3 completion = 669 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromCalendarFields(Calendar) H3] tokens: 583 prompt + 129 completion = 712 total
  📊 GPT[method_score org.joda.time.LocalDate.getLocalMillis() H3] tokens: 517 prompt + 3 completion = 520 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getLocalMillis() H3] tokens: 494 prompt + 124 completion = 618 total
  📊 GPT[method_score org.joda.time.LocalDate.equals(Object) H3] tokens: 538 prompt + 3 completion = 541 total
  📊 GPT[method_explanation org.joda.time.LocalDate.equals(Object) H3] tokens: 514 prompt + 123 completion = 637 total
  📊 GPT[method_score org.joda.time.LocalDate.get(DateTimeFieldType) H3] tokens: 569 prompt + 3 completion = 572 total
  📊 GPT[method_explanation org.joda.time.LocalDate.get(DateTimeFieldType) H3] tokens: 537 prompt + 124 completion = 661 total
  📊 GPT[method_score org.joda.time.LocalDate.getChronology() H3] tokens: 518 prompt + 3 completion = 521 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getChronology() H3] tokens: 495 prompt + 112 completion = 607 total
  📊 GPT[method_score org.joda.time.LocalDate.isSupported(DateTimeFieldType) H3] tokens: 537 prompt + 3 completion = 540 total
  📊 GPT[method_explanation org.joda.time.LocalDate.isSupported(DateTimeFieldType) H3] tokens: 513 prompt + 120 completion = 633 total
  📊 GPT[method_score org.joda.time.LocalDate.toString() H3] tokens: 524 prompt + 3 completion = 527 total
  📊 GPT[method_explanation org.joda.time.LocalDate.toString() H3] tokens: 501 prompt + 125 completion = 626 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H4] tokens: 701 prompt + 3 completion = 704 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H4] tokens: 589 prompt + 109 completion = 698 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromDateFields(Date) H4] tokens: 722 prompt + 3 completion = 725 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromDateFields(Date) H4] tokens: 596 prompt + 144 completion = 740 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H4] tokens: 711 prompt + 3 completion = 714 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H4] tokens: 616 prompt + 135 completion = 751 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H4] tokens: 726 prompt + 3 completion = 729 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H4] tokens: 602 prompt + 137 completion = 739 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H4] tokens: 549 prompt + 3 completion = 552 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H4] tokens: 525 prompt + 119 completion = 644 total
  📊 GPT[method_score org.joda.time.LocalDate.fromDateFields(Date) H4] tokens: 679 prompt + 3 completion = 682 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromDateFields(Date) H4] tokens: 595 prompt + 122 completion = 717 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int) H4] tokens: 547 prompt + 3 completion = 550 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int) H4] tokens: 523 prompt + 118 completion = 641 total
  📊 GPT[method_score org.joda.time.LocalDate.fromCalendarFields(Calendar) H4] tokens: 670 prompt + 3 completion = 673 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromCalendarFields(Calendar) H4] tokens: 587 prompt + 122 completion = 709 total
  📊 GPT[method_score org.joda.time.LocalDate.getLocalMillis() H4] tokens: 521 prompt + 3 completion = 524 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getLocalMillis() H4] tokens: 498 prompt + 109 completion = 607 total
  📊 GPT[method_score org.joda.time.LocalDate.equals(Object) H4] tokens: 542 prompt + 3 completion = 545 total
  📊 GPT[method_explanation org.joda.time.LocalDate.equals(Object) H4] tokens: 518 prompt + 107 completion = 625 total
  📊 GPT[method_score org.joda.time.LocalDate.get(DateTimeFieldType) H4] tokens: 573 prompt + 3 completion = 576 total
  📊 GPT[method_explanation org.joda.time.LocalDate.get(DateTimeFieldType) H4] tokens: 541 prompt + 136 completion = 677 total
  📊 GPT[method_score org.joda.time.LocalDate.getChronology() H4] tokens: 522 prompt + 3 completion = 525 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getChronology() H4] tokens: 499 prompt + 111 completion = 610 total
  📊 GPT[method_score org.joda.time.LocalDate.isSupported(DateTimeFieldType) H4] tokens: 541 prompt + 3 completion = 544 total
  📊 GPT[method_explanation org.joda.time.LocalDate.isSupported(DateTimeFieldType) H4] tokens: 517 prompt + 126 completion = 643 total
  📊 GPT[method_score org.joda.time.LocalDate.toString() H4] tokens: 528 prompt + 3 completion = 531 total
  📊 GPT[method_explanation org.joda.time.LocalDate.toString() H4] tokens: 505 prompt + 154 completion = 659 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H5] tokens: 707 prompt + 3 completion = 710 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromCalendarFields(Calendar) H5] tokens: 595 prompt + 139 completion = 734 total
  📊 GPT[method_score org.joda.time.LocalDateTime.fromDateFields(Date) H5] tokens: 728 prompt + 3 completion = 731 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.fromDateFields(Date) H5] tokens: 602 prompt + 128 completion = 730 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H5] tokens: 717 prompt + 3 completion = 720 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int) H5] tokens: 622 prompt + 127 completion = 749 total
  📊 GPT[method_score org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H5] tokens: 732 prompt + 3 completion = 735 total
  📊 GPT[method_explanation org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology) H5] tokens: 608 prompt + 118 completion = 726 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H5] tokens: 555 prompt + 3 completion = 558 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int,Chronology) H5] tokens: 531 prompt + 122 completion = 653 total
  📊 GPT[method_score org.joda.time.LocalDate.fromDateFields(Date) H5] tokens: 685 prompt + 3 completion = 688 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromDateFields(Date) H5] tokens: 601 prompt + 124 completion = 725 total
  📊 GPT[method_score org.joda.time.LocalDate.LocalDate(int,int,int) H5] tokens: 553 prompt + 3 completion = 556 total
  📊 GPT[method_explanation org.joda.time.LocalDate.LocalDate(int,int,int) H5] tokens: 529 prompt + 120 completion = 649 total
  📊 GPT[method_score org.joda.time.LocalDate.fromCalendarFields(Calendar) H5] tokens: 676 prompt + 3 completion = 679 total
  📊 GPT[method_explanation org.joda.time.LocalDate.fromCalendarFields(Calendar) H5] tokens: 593 prompt + 125 completion = 718 total
  📊 GPT[method_score org.joda.time.LocalDate.getLocalMillis() H5] tokens: 527 prompt + 3 completion = 530 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getLocalMillis() H5] tokens: 504 prompt + 111 completion = 615 total
  📊 GPT[method_score org.joda.time.LocalDate.equals(Object) H5] tokens: 548 prompt + 3 completion = 551 total
  📊 GPT[method_explanation org.joda.time.LocalDate.equals(Object) H5] tokens: 524 prompt + 150 completion = 674 total
  📊 GPT[method_score org.joda.time.LocalDate.get(DateTimeFieldType) H5] tokens: 579 prompt + 3 completion = 582 total
  📊 GPT[method_explanation org.joda.time.LocalDate.get(DateTimeFieldType) H5] tokens: 547 prompt + 116 completion = 663 total
  📊 GPT[method_score org.joda.time.LocalDate.getChronology() H5] tokens: 528 prompt + 3 completion = 531 total
  📊 GPT[method_explanation org.joda.time.LocalDate.getChronology() H5] tokens: 505 prompt + 134 completion = 639 total
  📊 GPT[method_score org.joda.time.LocalDate.isSupported(DateTimeFieldType) H5] tokens: 547 prompt + 3 completion = 550 total
  📊 GPT[method_explanation org.joda.time.LocalDate.isSupported(DateTimeFieldType) H5] tokens: 523 prompt + 136 completion = 659 total
  📊 GPT[method_score org.joda.time.LocalDate.toString() H5] tokens: 534 prompt + 3 completion = 537 total
  📊 GPT[method_explanation org.joda.time.LocalDate.toString() H5] tokens: 511 prompt + 142 completion = 653 total
  🔀 Tie-breaking 6 methods with score 0.900000
  📊 GPT[method_tie_break] tokens: 2575 prompt + 125 completion = 2700 total
  🔍 Raw tie-breaking response: ```json
[
  {"method": "org.joda.time.LocalDateTime.fromDateFields(Date)", "tie_break_score": 0.95},
  {"method": "org.joda.time.LocalDateTime.fromCalendarFields(Calendar)", "tie_break_score": 0.82},
  {"method": "org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int)", "tie_break_score": 0.65},
  {"method": "org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology)", "tie_break_score": 0.43}
]
```
    ❌ JSON parse attempt 1 failed: Expecting value: line 1 column 1 (char 0)
    ✅ Successfully parsed JSON attempt 2
    🔍 Parsed object type: <class 'list'>
    🔍 Parsed object content: [{'method': 'org.joda.time.LocalDateTime.fromDateFields(Date)', 'tie_break_score': 0.95}, {'method': 'org.joda.time.LocalDateTime.fromCalendarFields(Calendar)', 'tie_break_score': 0.82}, {'method': 'org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int)', 'tie_break_score': 0.65}, {'method': 'org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology)', 'tie_break_score': 0.43}]
    🔍 Processing method: org.joda.time.LocalDateTime.fromDateFields(Date), value: 0.95 (type: <class 'float'>)
    🔍 Coerced to: 0.95
    📝 Recorded org.joda.time.LocalDateTime.fromDateFields(Date): 0.95 -> 0.95
    🔍 Processing method: org.joda.time.LocalDateTime.fromCalendarFields(Calendar), value: 0.82 (type: <class 'float'>)
    🔍 Coerced to: 0.82
    📝 Recorded org.joda.time.LocalDateTime.fromCalendarFields(Calendar): 0.82 -> 0.82
    🔍 Processing method: org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int), value: 0.65 (type: <class 'float'>)
    🔍 Coerced to: 0.65
    📝 Recorded org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int): 0.65 -> 0.65
    🔍 Processing method: org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology), value: 0.43 (type: <class 'float'>)
    🔍 Coerced to: 0.43
    📝 Recorded org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology): 0.43 -> 0.43
  📊 Parsed tie-breaking scores: {'org.joda.time.LocalDateTime.fromDateFields(Date)': 1.0, 'org.joda.time.LocalDateTime.fromCalendarFields(Calendar)': 0.8631578947368421, 'org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int)': 0.6842105263157895, 'org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology)': 0.45263157894736844}
  🎯 Tie-breaking scores: {'org.joda.time.LocalDateTime.fromDateFields(Date)': 1.0, 'org.joda.time.LocalDateTime.fromCalendarFields(Calendar)': 0.8631578947368421, 'org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int)': 0.6842105263157895, 'org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology)': 0.45263157894736844}
    org.joda.time.LocalDateTime.fromCalendarFields(Calendar): 0.900000 + 0.008632 = 0.908632
    org.joda.time.LocalDateTime.fromDateFields(Date): 0.900000 + 0.010000 = 0.910000
    org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int): 0.900000 + 0.006842 = 0.906842
    org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology): 0.900000 + 0.004526 = 0.904526
  ✅ Final ranking after tie-breaking:
    1. org.joda.time.LocalDateTime.fromDateFields(Date): 0.910000
    2. org.joda.time.LocalDateTime.fromCalendarFields(Calendar): 0.908632
    3. org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int): 0.906842
    4. org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology): 0.904526
    5. org.joda.time.LocalDate.fromDateFields(Date): 0.900000
    6. org.joda.time.LocalDate.fromCalendarFields(Calendar): 0.900000

Top suspicious methods:
  1. org.joda.time.LocalDateTime.fromDateFields(Date): 0.910 — best hypothesis H1: Hypothesis H1: The failure may be caused by the `fromDateFields` method not properly handling dates with years before zero, leading to incorrect date conversions or exceptions. (confidence 0.700); supporting class org.joda.time.LocalDateTime (HH1)
      explanation: The method `org.joda.time.LocalDateTime.fromDateFields(Date)` constructs a `LocalDateTime` by directly extracting field values from a `java.util.Date` object. In the failure context, the method is expected to handle a date from the BC er...
  2. org.joda.time.LocalDateTime.fromCalendarFields(Calendar): 0.909 — best hypothesis H1: Hypothesis H1: The failure may be caused by the `fromDateFields` method not properly handling dates with years before zero, leading to incorrect date conversions or exceptions. (confidence 0.700); supporting class org.joda.time.LocalDateTime (HH1)
      explanation: The method `org.joda.time.LocalDateTime.fromCalendarFields(Calendar)` constructs a `LocalDateTime` by directly using the field values from a `Calendar` object. In the failure context, the `GregorianCalendar` is set to a BC era, which mea...
  3. org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int): 0.907 — best hypothesis H5: Hypothesis H5: The failure may be caused by the test attempting to construct a `LocalDateTime` object from a `Date` instance representing a year before zero, which is not supported by the underlying date-time library. (confidence 0.800); supporting class org.joda.time.LocalDateTime (HH1)
      explanation: The method `org.joda.time.LocalDateTime.LocalDateTime(int, int, int, int, int, int, int)` constructs a `LocalDateTime` object using the specified year, month, day, hour, minute, second, and millisecond values. The failure in the test occ...
  4. org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology): 0.905 — best hypothesis H5: Hypothesis H5: The failure may be caused by the test attempting to construct a `LocalDateTime` object from a `Date` instance representing a year before zero, which is not supported by the underlying date-time library. (confidence 0.800); supporting class org.joda.time.LocalDateTime (HH1)
      explanation: The method `org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,Chronology)` supports Hypothesis H5 because it constructs a `LocalDateTime` object using the specified year and chronology, and if the chronology is null, ...
  5. org.joda.time.LocalDate.fromDateFields(Date): 0.900 — best hypothesis H1: Hypothesis H1: The failure may be caused by the `fromDateFields` method not properly handling dates with years before zero, leading to incorrect date conversions or exceptions. (confidence 0.700); supporting class org.joda.time.LocalDate (HH3)
      explanation: The method `org.joda.time.LocalDate.fromDateFields(Date)` constructs a `LocalDate` by directly using the field values from a `java.util.Date`. The failure in the test suggests that the method does not correctly handle dates with years be...
  6. org.joda.time.LocalDate.fromCalendarFields(Calendar): 0.900 — best hypothesis H1: Hypothesis H1: The failure may be caused by the `fromDateFields` method not properly handling dates with years before zero, leading to incorrect date conversions or exceptions. (confidence 0.700); supporting class org.joda.time.LocalDate (HH3)
      explanation: The method `org.joda.time.LocalDate.fromCalendarFields(Calendar)` constructs a `LocalDate` by directly extracting field values from a `Calendar` instance, including the year, month, and day. Given that the method relies on the `Calendar`...
  7. org.joda.time.LocalDate.LocalDate(int,int,int): 0.800 — best hypothesis H2: Hypothesis H2: The failure may be caused by the test not handling negative year values correctly, leading to an exception or incorrect behavior when constructing a LocalDateTime from a date with a year before zero. (confidence 0.700); supporting class org.joda.time.LocalDate (HH3)
      explanation: The method `org.joda.time.LocalDate.LocalDate(int, int, int)` constructs a `LocalDate` using the ISOChronology in UTC, which does not support a year zero. When the test attempts to create a `LocalDateTime` with a year zero, it contradict...
  8. org.joda.time.LocalDate.LocalDate(int,int,int,Chronology): 0.700 — best hypothesis H2: Hypothesis H2: The failure may be caused by the test not handling negative year values correctly, leading to an exception or incorrect behavior when constructing a LocalDateTime from a date with a year before zero. (confidence 0.700); supporting class org.joda.time.LocalDate (HH3)
      explanation: The method `org.joda.time.LocalDate.LocalDate(int,int,int,Chronology)` supports Hypothesis H2 because it constructs a `LocalDate` using the specified year, month, and day, but it does not inherently handle negative year values or years b...
  9. org.joda.time.LocalDate.getLocalMillis(): 0.200 — best hypothesis H1: Hypothesis H1: The failure may be caused by the `fromDateFields` method not properly handling dates with years before zero, leading to incorrect date conversions or exceptions. (confidence 0.700); supporting class org.joda.time.LocalDate (HH3)
      explanation: The method `org.joda.time.LocalDate.getLocalMillis()` returns the local milliseconds value stored in the `iLocalMillis` field, which represents the date without considering the era (BC/AD). This supports Hypothesis H1, as the `fromDateFi...
  10. org.joda.time.LocalDate.equals(Object): 0.200 — best hypothesis H2: Hypothesis H2: The failure may be caused by the test not handling negative year values correctly, leading to an exception or incorrect behavior when constructing a LocalDateTime from a date with a year before zero. (confidence 0.700); supporting class org.joda.time.LocalDate (HH3)
      explanation: The method `org.joda.time.LocalDate.equals(Object)` supports Hypothesis H2 by ensuring that equality is determined based on both chronology and local milliseconds. In the failure context, the expected `LocalDateTime` is constructed with ...

📊 Token Usage Summary:
  Total API calls: 187
  Total tokens: 120,081
  Prompt tokens: 108,341
  Completion tokens: 11,740
Results written to defects4j_batch_results/Time-12_parallel_case/Time-12_parallel_answer.csv
Token usage written to defects4j_batch_results/Time-12_parallel_case/Time-12_token_usage.csv
Summary written to defects4j_batch_results/Time-12_parallel_case/Time-12_parallel_summary.md
