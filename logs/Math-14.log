=== GPT-only pipeline for Math-14 ===
  📊 GPT[hypothesis H1] tokens: 79 prompt + 46 completion = 125 total
  📊 GPT[hypothesis H2] tokens: 79 prompt + 48 completion = 127 total
  📊 GPT[hypothesis H3] tokens: 79 prompt + 48 completion = 127 total
  📊 GPT[hypothesis H4] tokens: 79 prompt + 26 completion = 105 total
  📊 GPT[hypothesis H5] tokens: 79 prompt + 26 completion = 105 total
  📊 GPT[hypothesis_confidence H1] tokens: 107 prompt + 3 completion = 110 total
  📊 GPT[hypothesis_confidence H2] tokens: 109 prompt + 3 completion = 112 total
  📊 GPT[hypothesis_confidence H3] tokens: 109 prompt + 3 completion = 112 total
  📊 GPT[hypothesis_confidence H4] tokens: 87 prompt + 3 completion = 90 total
  📊 GPT[hypothesis_confidence H5] tokens: 87 prompt + 3 completion = 90 total
Hypotheses:
  H1 (confidence 0.700): Hypothesis H1: The failure in "org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample" could be caused by numerical instability or precision errors when handling large datasets or high-degree polynomials.
  H2 (confidence 0.800): Hypothesis H2: The failure in "org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample" could be due to numerical instability or precision loss when handling large datasets, leading to inaccurate polynomial fitting results.
  H3 (confidence 0.800): Hypothesis H3: The failure in "org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample" could be due to numerical instability or precision loss when handling large datasets, leading to inaccurate polynomial fitting results.
  H4 (confidence 0.700): Hypothesis H4: The failure might be caused by numerical instability or precision errors when handling large datasets in the polynomial fitting algorithm.
  H5 (confidence 0.700): Hypothesis H5: The failure may be caused by numerical instability or precision errors when handling large datasets in the polynomial fitting algorithm.
Ignoring 23 covered classes without method coverage
    ▶️ GPT[class pre-ranking] running 1 prompts
  📊 GPT[class_pre_rank org.apache.commons.math3.optim.nonlinear.vector.Weight] tokens: 696 prompt + 61 completion = 757 total
    ✅ GPT[class pre-ranking] completed; taking top 5
Candidate classes:
  org.apache.commons.math3.optim.nonlinear.vector.Weight: n/a ```json
{"score": 0.2, "reason": "The OutOfMemoryError suggests the issue is likely due to excessive memory usage in the test, not a defect in the Weight class. The test adds a large number of observed points, which may exceed available heap space."}
```
Collected 1 methods across candidate classes
    ▶️ GPT[method pre-ranking] running 1 prompts
  📊 GPT[method_pre_rank org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[])] tokens: 764 prompt + 81 completion = 845 total
    ✅ GPT[method pre-ranking] completed
Selected 1 candidate methods
  📊 GPT[class_score org.apache.commons.math3.optim.nonlinear.vector.Weight H1] tokens: 449 prompt + 3 completion = 452 total
  📊 GPT[class_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight H1] tokens: 429 prompt + 101 completion = 530 total
  📊 GPT[class_score org.apache.commons.math3.optim.nonlinear.vector.Weight H2] tokens: 451 prompt + 3 completion = 454 total
  📊 GPT[class_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight H2] tokens: 431 prompt + 116 completion = 547 total
  📊 GPT[class_score org.apache.commons.math3.optim.nonlinear.vector.Weight H3] tokens: 451 prompt + 3 completion = 454 total
  📊 GPT[class_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight H3] tokens: 431 prompt + 132 completion = 563 total
  📊 GPT[class_score org.apache.commons.math3.optim.nonlinear.vector.Weight H4] tokens: 429 prompt + 3 completion = 432 total
  📊 GPT[class_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight H4] tokens: 409 prompt + 105 completion = 514 total
  📊 GPT[class_score org.apache.commons.math3.optim.nonlinear.vector.Weight H5] tokens: 429 prompt + 3 completion = 432 total
  📊 GPT[class_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight H5] tokens: 409 prompt + 104 completion = 513 total
  📊 GPT[method_score org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H1] tokens: 536 prompt + 3 completion = 539 total
  📊 GPT[method_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H1] tokens: 497 prompt + 106 completion = 603 total
  📊 GPT[method_score org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H2] tokens: 538 prompt + 3 completion = 541 total
  📊 GPT[method_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H2] tokens: 499 prompt + 99 completion = 598 total
  📊 GPT[method_score org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H3] tokens: 538 prompt + 3 completion = 541 total
  📊 GPT[method_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H3] tokens: 499 prompt + 107 completion = 606 total
  📊 GPT[method_score org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H4] tokens: 516 prompt + 3 completion = 519 total
  📊 GPT[method_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H4] tokens: 477 prompt + 98 completion = 575 total
  📊 GPT[method_score org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H5] tokens: 516 prompt + 3 completion = 519 total
  📊 GPT[method_explanation org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]) H5] tokens: 477 prompt + 96 completion = 573 total

Top suspicious methods:
  1. org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[]): 0.300 — best hypothesis H1: Hypothesis H1: The failure in "org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample" could be caused by numerical instability or precision errors when handling large datasets or high-degree polynomials. (confidence 0.700); supporting class org.apache.commons.math3.optim.nonlinear.vector.Weight (HH5)
      explanation: The method `org.apache.commons.math3.optim.nonlinear.vector.Weight.Weight(double[])` creates a diagonal weight matrix from a given array of weights. This method supports hypothesis H1 as it involves creating a potentially large matrix wh...

📊 Token Usage Summary:
  Total API calls: 32
  Total tokens: 13,210
  Prompt tokens: 11,765
  Completion tokens: 1,445
Results written to defects4j_batch_results/Math-14_parallel_case/Math-14_parallel_answer.csv
Token usage written to defects4j_batch_results/Math-14_parallel_case/Math-14_token_usage.csv
Summary written to defects4j_batch_results/Math-14_parallel_case/Math-14_parallel_summary.md
