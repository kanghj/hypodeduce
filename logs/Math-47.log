=== GPT-only pipeline for Math-47 ===
  📊 GPT[hypothesis H1] tokens: 76 prompt + 49 completion = 125 total
  📊 GPT[hypothesis H2] tokens: 76 prompt + 44 completion = 120 total
  📊 GPT[hypothesis H3] tokens: 76 prompt + 49 completion = 125 total
  📊 GPT[hypothesis H4] tokens: 76 prompt + 43 completion = 119 total
  📊 GPT[hypothesis H5] tokens: 76 prompt + 44 completion = 120 total
  📊 GPT[hypothesis_confidence H1] tokens: 110 prompt + 3 completion = 113 total
  📊 GPT[hypothesis_confidence H2] tokens: 105 prompt + 3 completion = 108 total
  📊 GPT[hypothesis_confidence H3] tokens: 110 prompt + 3 completion = 113 total
  📊 GPT[hypothesis_confidence H4] tokens: 104 prompt + 3 completion = 107 total
  📊 GPT[hypothesis_confidence H5] tokens: 105 prompt + 3 completion = 108 total
Hypotheses:
  H1 (confidence 0.700): Hypothesis H1: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" could be due to an incorrect implementation of the inverse tangent function for complex numbers, leading to inaccurate results for certain input values.
  H2 (confidence 0.700): Hypothesis H2: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" could be due to incorrect handling of edge cases involving complex numbers with zero or near-zero imaginary parts.
  H3 (confidence 0.700): Hypothesis H3: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" might be caused by an incorrect implementation of the inverse tangent function for complex numbers, leading to inaccurate results for certain input values.
  H4 (confidence 0.700): Hypothesis H4: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" might be caused by incorrect handling of edge cases involving complex numbers with zero real or imaginary parts.
  H5 (confidence 0.700): Hypothesis H5: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" could be due to incorrect handling of edge cases involving complex numbers with zero or near-zero imaginary parts.
    ▶️ GPT[class pre-ranking] running 2 prompts
  📊 GPT[class_pre_rank org.apache.commons.math.complex.Complex] tokens: 675 prompt + 57 completion = 732 total
  📊 GPT[class_pre_rank org.apache.commons.math.util.MathUtils] tokens: 620 prompt + 46 completion = 666 total
    ✅ GPT[class pre-ranking] completed; taking top 5
Candidate classes:
  org.apache.commons.math.complex.Complex: n/a ```json
{"score": 0.9, "reason": "The class org.apache.commons.math.complex.Complex is highly likely the best location to fix the bug, as both failures involve incorrect handling of complex arithmetic operations (atan and divide) within this class."}
```
  org.apache.commons.math.util.MathUtils: n/a ```json
{"score": 0.2, "reason": "The failures are related to complex number operations, not utility functions in MathUtils. The issues likely reside in the Complex class, not MathUtils."}
```
Collected 6 methods across candidate classes
    ▶️ GPT[method pre-ranking] running 6 prompts
  📊 GPT[method_pre_rank org.apache.commons.math.complex.Complex.Complex(double,double)] tokens: 716 prompt + 64 completion = 780 total
  📊 GPT[method_pre_rank org.apache.commons.math.complex.Complex.atan()] tokens: 678 prompt + 97 completion = 775 total
  📊 GPT[method_pre_rank org.apache.commons.math.complex.Complex.createComplex(double,double)] tokens: 699 prompt + 54 completion = 753 total
  📊 GPT[method_pre_rank org.apache.commons.math.complex.Complex.divide(Complex)] tokens: 798 prompt + 76 completion = 874 total
  📊 GPT[method_pre_rank org.apache.commons.math.complex.Complex.isInfinite()] tokens: 701 prompt + 87 completion = 788 total
  📊 GPT[method_pre_rank org.apache.commons.math.util.MathUtils.checkNotNull(Object)] tokens: 659 prompt + 81 completion = 740 total
    ✅ GPT[method pre-ranking] completed
Selected 6 candidate methods
  📊 GPT[class_score org.apache.commons.math.complex.Complex H1] tokens: 432 prompt + 3 completion = 435 total
  📊 GPT[class_explanation org.apache.commons.math.complex.Complex H1] tokens: 409 prompt + 134 completion = 543 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H1] tokens: 418 prompt + 3 completion = 421 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H1] tokens: 395 prompt + 116 completion = 511 total
  📊 GPT[class_score org.apache.commons.math.complex.Complex H2] tokens: 427 prompt + 3 completion = 430 total
  📊 GPT[class_explanation org.apache.commons.math.complex.Complex H2] tokens: 404 prompt + 149 completion = 553 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H2] tokens: 413 prompt + 3 completion = 416 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H2] tokens: 390 prompt + 109 completion = 499 total
  📊 GPT[class_score org.apache.commons.math.complex.Complex H3] tokens: 432 prompt + 3 completion = 435 total
  📊 GPT[class_explanation org.apache.commons.math.complex.Complex H3] tokens: 409 prompt + 131 completion = 540 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H3] tokens: 418 prompt + 3 completion = 421 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H3] tokens: 395 prompt + 92 completion = 487 total
  📊 GPT[class_score org.apache.commons.math.complex.Complex H4] tokens: 426 prompt + 3 completion = 429 total
  📊 GPT[class_explanation org.apache.commons.math.complex.Complex H4] tokens: 403 prompt + 112 completion = 515 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H4] tokens: 412 prompt + 3 completion = 415 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H4] tokens: 389 prompt + 111 completion = 500 total
  📊 GPT[class_score org.apache.commons.math.complex.Complex H5] tokens: 427 prompt + 3 completion = 430 total
  📊 GPT[class_explanation org.apache.commons.math.complex.Complex H5] tokens: 404 prompt + 104 completion = 508 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H5] tokens: 413 prompt + 3 completion = 416 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H5] tokens: 390 prompt + 108 completion = 498 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.atan() H1] tokens: 477 prompt + 3 completion = 480 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.atan() H1] tokens: 455 prompt + 132 completion = 587 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.divide(Complex) H1] tokens: 643 prompt + 3 completion = 646 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.divide(Complex) H1] tokens: 522 prompt + 152 completion = 674 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.isInfinite() H1] tokens: 500 prompt + 3 completion = 503 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.isInfinite() H1] tokens: 475 prompt + 114 completion = 589 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.Complex(double,double) H1] tokens: 515 prompt + 3 completion = 518 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.Complex(double,double) H1] tokens: 474 prompt + 108 completion = 582 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.createComplex(double,double) H1] tokens: 498 prompt + 3 completion = 501 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.createComplex(double,double) H1] tokens: 476 prompt + 105 completion = 581 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.checkNotNull(Object) H1] tokens: 487 prompt + 1 completion = 488 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.checkNotNull(Object) H1] tokens: 465 prompt + 128 completion = 593 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.atan() H2] tokens: 472 prompt + 3 completion = 475 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.atan() H2] tokens: 450 prompt + 148 completion = 598 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.divide(Complex) H2] tokens: 638 prompt + 3 completion = 641 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.divide(Complex) H2] tokens: 517 prompt + 125 completion = 642 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.isInfinite() H2] tokens: 495 prompt + 3 completion = 498 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.isInfinite() H2] tokens: 470 prompt + 129 completion = 599 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.Complex(double,double) H2] tokens: 510 prompt + 3 completion = 513 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.Complex(double,double) H2] tokens: 469 prompt + 117 completion = 586 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.createComplex(double,double) H2] tokens: 493 prompt + 3 completion = 496 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.createComplex(double,double) H2] tokens: 471 prompt + 121 completion = 592 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.checkNotNull(Object) H2] tokens: 482 prompt + 1 completion = 483 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.checkNotNull(Object) H2] tokens: 460 prompt + 126 completion = 586 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.atan() H3] tokens: 477 prompt + 3 completion = 480 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.atan() H3] tokens: 455 prompt + 136 completion = 591 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.divide(Complex) H3] tokens: 643 prompt + 3 completion = 646 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.divide(Complex) H3] tokens: 522 prompt + 130 completion = 652 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.isInfinite() H3] tokens: 500 prompt + 3 completion = 503 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.isInfinite() H3] tokens: 475 prompt + 128 completion = 603 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.Complex(double,double) H3] tokens: 515 prompt + 3 completion = 518 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.Complex(double,double) H3] tokens: 474 prompt + 115 completion = 589 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.createComplex(double,double) H3] tokens: 498 prompt + 3 completion = 501 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.createComplex(double,double) H3] tokens: 476 prompt + 103 completion = 579 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.checkNotNull(Object) H3] tokens: 487 prompt + 1 completion = 488 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.checkNotNull(Object) H3] tokens: 465 prompt + 116 completion = 581 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.atan() H4] tokens: 471 prompt + 3 completion = 474 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.atan() H4] tokens: 449 prompt + 116 completion = 565 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.divide(Complex) H4] tokens: 637 prompt + 3 completion = 640 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.divide(Complex) H4] tokens: 516 prompt + 132 completion = 648 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.isInfinite() H4] tokens: 494 prompt + 3 completion = 497 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.isInfinite() H4] tokens: 469 prompt + 105 completion = 574 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.Complex(double,double) H4] tokens: 509 prompt + 3 completion = 512 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.Complex(double,double) H4] tokens: 468 prompt + 127 completion = 595 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.createComplex(double,double) H4] tokens: 492 prompt + 3 completion = 495 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.createComplex(double,double) H4] tokens: 470 prompt + 144 completion = 614 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.checkNotNull(Object) H4] tokens: 481 prompt + 3 completion = 484 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.checkNotNull(Object) H4] tokens: 459 prompt + 120 completion = 579 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.atan() H5] tokens: 472 prompt + 3 completion = 475 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.atan() H5] tokens: 450 prompt + 162 completion = 612 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.divide(Complex) H5] tokens: 638 prompt + 3 completion = 641 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.divide(Complex) H5] tokens: 517 prompt + 132 completion = 649 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.isInfinite() H5] tokens: 495 prompt + 3 completion = 498 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.isInfinite() H5] tokens: 470 prompt + 112 completion = 582 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.Complex(double,double) H5] tokens: 510 prompt + 3 completion = 513 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.Complex(double,double) H5] tokens: 469 prompt + 127 completion = 596 total
  📊 GPT[method_score org.apache.commons.math.complex.Complex.createComplex(double,double) H5] tokens: 493 prompt + 3 completion = 496 total
  📊 GPT[method_explanation org.apache.commons.math.complex.Complex.createComplex(double,double) H5] tokens: 471 prompt + 137 completion = 608 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.checkNotNull(Object) H5] tokens: 482 prompt + 3 completion = 485 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.checkNotNull(Object) H5] tokens: 460 prompt + 112 completion = 572 total

Top suspicious methods:
  1. org.apache.commons.math.complex.Complex.atan(): 0.800 — best hypothesis H1: Hypothesis H1: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" could be due to an incorrect implementation of the inverse tangent function for complex numbers, leading to inaccurate results for certain input values. (confidence 0.700); supporting class org.apache.commons.math.complex.Complex (HH1)
      explanation: The method `org.apache.commons.math.complex.Complex.atan()` computes the inverse tangent of a complex number using the formula: \((z + i) / (i - z)\), followed by taking the logarithm and multiplying by \(i/2\). In the test `testAtanI`, ...
  2. org.apache.commons.math.complex.Complex.divide(Complex): 0.300 — best hypothesis H4: Hypothesis H4: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" might be caused by incorrect handling of edge cases involving complex numbers with zero real or imaginary parts. (confidence 0.700); supporting class org.apache.commons.math.complex.Complex (HH1)
      explanation: The method `org.apache.commons.math.complex.Complex.divide(Complex)` supports Hypothesis H4 by potentially mishandling division by zero, which is an edge case involving complex numbers with zero real or imaginary parts. In the test `test...
  3. org.apache.commons.math.complex.Complex.isInfinite(): 0.200 — best hypothesis H2: Hypothesis H2: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" could be due to incorrect handling of edge cases involving complex numbers with zero or near-zero imaginary parts. (confidence 0.700); supporting class org.apache.commons.math.complex.Complex (HH1)
      explanation: The method `org.apache.commons.math.complex.Complex.isInfinite()` checks if either the real or imaginary part of a complex number is infinite, returning true if so, and neither part is NaN. In the test `testAtanI`, the assertion expects ...
  4. org.apache.commons.math.complex.Complex.Complex(double,double): 0.200 — best hypothesis H1: Hypothesis H1: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" could be due to an incorrect implementation of the inverse tangent function for complex numbers, leading to inaccurate results for certain input values. (confidence 0.700); supporting class org.apache.commons.math.complex.Complex (HH1)
      explanation: The method `org.apache.commons.math.complex.Complex.Complex(double, double)` is responsible for constructing complex numbers by setting their real and imaginary parts. It does not directly implement or affect the inverse tangent function...
  5. org.apache.commons.math.complex.Complex.createComplex(double,double): 0.200 — best hypothesis H2: Hypothesis H2: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" could be due to incorrect handling of edge cases involving complex numbers with zero or near-zero imaginary parts. (confidence 0.700); supporting class org.apache.commons.math.complex.Complex (HH1)
      explanation: The method `org.apache.commons.math.complex.Complex.createComplex(double, double)` simply constructs a new complex number using the provided real and imaginary parts without any special handling for edge cases, such as zero or near-zero ...
  6. org.apache.commons.math.util.MathUtils.checkNotNull(Object): 0.100 — best hypothesis H4: Hypothesis H4: The failure in "org.apache.commons.math.complex.ComplexTest::testAtanI" might be caused by incorrect handling of edge cases involving complex numbers with zero real or imaginary parts. (confidence 0.700); supporting class org.apache.commons.math.util.MathUtils (HH2)
      explanation: The method `org.apache.commons.math.util.MathUtils.checkNotNull(Object)` is designed to ensure that an object is not null by throwing a `NullArgumentException` if the object is null. This method does not directly support or contradict Hy...

📊 Token Usage Summary:
  Total API calls: 98
  Total tokens: 50,254
  Prompt tokens: 44,409
  Completion tokens: 5,845
Results written to defects4j_batch_results/Math-47_parallel_case/Math-47_parallel_answer.csv
Token usage written to defects4j_batch_results/Math-47_parallel_case/Math-47_token_usage.csv
Summary written to defects4j_batch_results/Math-47_parallel_case/Math-47_parallel_summary.md
