=== GPT-only pipeline for Math-91 ===
  📊 GPT[hypothesis H1] tokens: 75 prompt + 49 completion = 124 total
  📊 GPT[hypothesis H2] tokens: 75 prompt + 44 completion = 119 total
  📊 GPT[hypothesis H3] tokens: 75 prompt + 45 completion = 120 total
  📊 GPT[hypothesis H4] tokens: 75 prompt + 40 completion = 115 total
  📊 GPT[hypothesis H5] tokens: 75 prompt + 34 completion = 109 total
  📊 GPT[hypothesis_confidence H1] tokens: 110 prompt + 3 completion = 113 total
  📊 GPT[hypothesis_confidence H2] tokens: 105 prompt + 3 completion = 108 total
  📊 GPT[hypothesis_confidence H3] tokens: 106 prompt + 3 completion = 109 total
  📊 GPT[hypothesis_confidence H4] tokens: 101 prompt + 3 completion = 104 total
  📊 GPT[hypothesis_confidence H5] tokens: 95 prompt + 3 completion = 98 total
Hypotheses:
  H1 (confidence 0.700): H1: The failure in "org.apache.commons.math.fraction.FractionTest::testCompareTo" might be caused by incorrect handling of edge cases where fractions have different denominators but are mathematically equivalent, leading to an incorrect comparison result.
  H2 (confidence 0.700): Hypothesis H2: The failure in "org.apache.commons.math.fraction.FractionTest::testCompareTo" might be caused by incorrect handling of edge cases where fractions have different denominators but are mathematically equivalent.
  H3 (confidence 0.700): Hypothesis H3: The failure in "org.apache.commons.math.fraction.FractionTest::testCompareTo" could be due to incorrect handling of edge cases where fractions have different signs, leading to an incorrect comparison result.
  H4 (confidence 0.700): Hypothesis H4: The failure in "org.apache.commons.math.fraction.FractionTest::testCompareTo" might be caused by incorrect handling of negative fractions during comparison, leading to unexpected results.
  H5 (confidence 0.700): Hypothesis H5: The failure might be caused by incorrect handling of edge cases where fractions have different denominators but are mathematically equivalent, leading to incorrect comparison results.
    ▶️ GPT[class pre-ranking] running 2 prompts
  📊 GPT[class_pre_rank org.apache.commons.math.fraction.Fraction] tokens: 646 prompt + 78 completion = 724 total
  📊 GPT[class_pre_rank org.apache.commons.math.util.MathUtils] tokens: 637 prompt + 56 completion = 693 total
    ✅ GPT[class pre-ranking] completed; taking top 5
Candidate classes:
  org.apache.commons.math.fraction.Fraction: n/a ```json
{"score": 0.9, "reason": "The failure in 'testCompareTo' suggests a bug in the 'compareTo(Fraction)' method of the 'Fraction' class, as it incorrectly returns 0 instead of -1 for two distinct approximations of PI. This indicates a high likelihood that the bug resides in the 'Fraction' class."}
```
  org.apache.commons.math.util.MathUtils: n/a ```json
{"score": 0.2, "reason": "The failure in 'FractionTest::testCompareTo' suggests an issue with fraction comparison logic, not directly related to 'MathUtils.gcd'. The gcd method is unlikely to affect comparison results."}
```
Collected 3 methods across candidate classes
    ▶️ GPT[method pre-ranking] running 3 prompts
  📊 GPT[method_pre_rank org.apache.commons.math.fraction.Fraction.compareTo(Fraction)] tokens: 724 prompt + 57 completion = 781 total
  📊 GPT[method_pre_rank org.apache.commons.math.fraction.Fraction.doubleValue()] tokens: 670 prompt + 70 completion = 740 total
  📊 GPT[method_pre_rank org.apache.commons.math.util.MathUtils.gcd(int,int)] tokens: 728 prompt + 60 completion = 788 total
    ✅ GPT[method pre-ranking] completed
Selected 3 candidate methods
  📊 GPT[class_score org.apache.commons.math.fraction.Fraction H1] tokens: 456 prompt + 3 completion = 459 total
  📊 GPT[class_explanation org.apache.commons.math.fraction.Fraction H1] tokens: 435 prompt + 116 completion = 551 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H1] tokens: 451 prompt + 3 completion = 454 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H1] tokens: 431 prompt + 107 completion = 538 total
  📊 GPT[class_score org.apache.commons.math.fraction.Fraction H2] tokens: 451 prompt + 3 completion = 454 total
  📊 GPT[class_explanation org.apache.commons.math.fraction.Fraction H2] tokens: 430 prompt + 136 completion = 566 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H2] tokens: 446 prompt + 3 completion = 449 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H2] tokens: 426 prompt + 125 completion = 551 total
  📊 GPT[class_score org.apache.commons.math.fraction.Fraction H3] tokens: 452 prompt + 3 completion = 455 total
  📊 GPT[class_explanation org.apache.commons.math.fraction.Fraction H3] tokens: 431 prompt + 136 completion = 567 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H3] tokens: 447 prompt + 3 completion = 450 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H3] tokens: 427 prompt + 123 completion = 550 total
  📊 GPT[class_score org.apache.commons.math.fraction.Fraction H4] tokens: 447 prompt + 3 completion = 450 total
  📊 GPT[class_explanation org.apache.commons.math.fraction.Fraction H4] tokens: 426 prompt + 117 completion = 543 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H4] tokens: 442 prompt + 3 completion = 445 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H4] tokens: 422 prompt + 132 completion = 554 total
  📊 GPT[class_score org.apache.commons.math.fraction.Fraction H5] tokens: 441 prompt + 3 completion = 444 total
  📊 GPT[class_explanation org.apache.commons.math.fraction.Fraction H5] tokens: 420 prompt + 126 completion = 546 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H5] tokens: 436 prompt + 3 completion = 439 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H5] tokens: 416 prompt + 128 completion = 544 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H1] tokens: 566 prompt + 3 completion = 569 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H1] tokens: 545 prompt + 111 completion = 656 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.doubleValue() H1] tokens: 512 prompt + 3 completion = 515 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.doubleValue() H1] tokens: 492 prompt + 118 completion = 610 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.gcd(int,int) H1] tokens: 628 prompt + 3 completion = 631 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.gcd(int,int) H1] tokens: 513 prompt + 124 completion = 637 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H2] tokens: 561 prompt + 3 completion = 564 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H2] tokens: 540 prompt + 109 completion = 649 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.doubleValue() H2] tokens: 507 prompt + 3 completion = 510 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.doubleValue() H2] tokens: 487 prompt + 127 completion = 614 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.gcd(int,int) H2] tokens: 623 prompt + 3 completion = 626 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.gcd(int,int) H2] tokens: 508 prompt + 129 completion = 637 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H3] tokens: 562 prompt + 3 completion = 565 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H3] tokens: 541 prompt + 108 completion = 649 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.doubleValue() H3] tokens: 508 prompt + 3 completion = 511 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.doubleValue() H3] tokens: 488 prompt + 114 completion = 602 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.gcd(int,int) H3] tokens: 624 prompt + 3 completion = 627 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.gcd(int,int) H3] tokens: 509 prompt + 124 completion = 633 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H4] tokens: 557 prompt + 3 completion = 560 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H4] tokens: 536 prompt + 114 completion = 650 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.doubleValue() H4] tokens: 503 prompt + 3 completion = 506 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.doubleValue() H4] tokens: 483 prompt + 120 completion = 603 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.gcd(int,int) H4] tokens: 619 prompt + 3 completion = 622 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.gcd(int,int) H4] tokens: 504 prompt + 111 completion = 615 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H5] tokens: 551 prompt + 3 completion = 554 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.compareTo(Fraction) H5] tokens: 530 prompt + 113 completion = 643 total
  📊 GPT[method_score org.apache.commons.math.fraction.Fraction.doubleValue() H5] tokens: 497 prompt + 3 completion = 500 total
  📊 GPT[method_explanation org.apache.commons.math.fraction.Fraction.doubleValue() H5] tokens: 477 prompt + 125 completion = 602 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.gcd(int,int) H5] tokens: 613 prompt + 3 completion = 616 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.gcd(int,int) H5] tokens: 498 prompt + 126 completion = 624 total

Top suspicious methods:
  1. org.apache.commons.math.fraction.Fraction.compareTo(Fraction): 0.900 — best hypothesis H2: Hypothesis H2: The failure in "org.apache.commons.math.fraction.FractionTest::testCompareTo" might be caused by incorrect handling of edge cases where fractions have different denominators but are mathematically equivalent. (confidence 0.700); supporting class org.apache.commons.math.fraction.Fraction (HH1)
      explanation: The method `org.apache.commons.math.fraction.Fraction.compareTo(Fraction)` converts both fractions to their double values before comparison. This approach can lead to precision issues, especially with fractions that are mathematically eq...
  2. org.apache.commons.math.fraction.Fraction.doubleValue(): 0.200 — best hypothesis H1: H1: The failure in "org.apache.commons.math.fraction.FractionTest::testCompareTo" might be caused by incorrect handling of edge cases where fractions have different denominators but are mathematically equivalent, leading to an incorrect comparison result. (confidence 0.700); supporting class org.apache.commons.math.fraction.Fraction (HH1)
      explanation: The method `org.apache.commons.math.fraction.Fraction.doubleValue()` converts a fraction to a `double` by dividing the numerator by the denominator. This supports hypothesis H1 because converting fractions to `double` can lead to precisi...
  3. org.apache.commons.math.util.MathUtils.gcd(int,int): 0.200 — best hypothesis H1: H1: The failure in "org.apache.commons.math.fraction.FractionTest::testCompareTo" might be caused by incorrect handling of edge cases where fractions have different denominators but are mathematically equivalent, leading to an incorrect comparison result. (confidence 0.700); supporting class org.apache.commons.math.util.MathUtils (HH1)
      explanation: The method `MathUtils.gcd(int, int)` calculates the greatest common divisor (GCD) of two integers, which is crucial for reducing fractions to their simplest form. In the context of `Fraction.compareTo`, if two fractions are mathematicall...

📊 Token Usage Summary:
  Total API calls: 65
  Total tokens: 32,754
  Prompt tokens: 29,112
  Completion tokens: 3,642
Results written to defects4j_batch_results/Math-91_parallel_case/Math-91_parallel_answer.csv
Token usage written to defects4j_batch_results/Math-91_parallel_case/Math-91_token_usage.csv
Summary written to defects4j_batch_results/Math-91_parallel_case/Math-91_parallel_summary.md
