=== GPT-only pipeline for Math-61 ===
  📊 GPT[hypothesis H1] tokens: 76 prompt + 49 completion = 125 total
  📊 GPT[hypothesis H2] tokens: 76 prompt + 34 completion = 110 total
  📊 GPT[hypothesis H3] tokens: 76 prompt + 51 completion = 127 total
  📊 GPT[hypothesis H4] tokens: 76 prompt + 34 completion = 110 total
  📊 GPT[hypothesis H5] tokens: 76 prompt + 34 completion = 110 total
  📊 GPT[hypothesis_confidence H1] tokens: 110 prompt + 3 completion = 113 total
  📊 GPT[hypothesis_confidence H2] tokens: 95 prompt + 3 completion = 98 total
  📊 GPT[hypothesis_confidence H3] tokens: 112 prompt + 3 completion = 115 total
  📊 GPT[hypothesis_confidence H4] tokens: 95 prompt + 3 completion = 98 total
  📊 GPT[hypothesis_confidence H5] tokens: 95 prompt + 3 completion = 98 total
Hypotheses:
  H1 (confidence 0.700): H1: The failure in "org.apache.commons.math.distribution.PoissonDistributionTest::testMean" could be due to an incorrect implementation of the mean calculation in the PoissonDistribution class, leading to discrepancies between expected and actual results.
  H2 (confidence 0.700): Hypothesis H2: The failure might be caused by an incorrect implementation of the mean calculation in the PoissonDistribution class, leading to discrepancies between expected and actual results.
  H3 (confidence 0.700): Hypothesis H3: The failure in "org.apache.commons.math.distribution.PoissonDistributionTest::testMean" could be due to an incorrect implementation of the mean calculation in the PoissonDistribution class, leading to discrepancies between expected and actual results.
  H4 (confidence 0.700): Hypothesis H4: The failure might be caused by an incorrect implementation of the mean calculation in the PoissonDistribution class, leading to discrepancies between expected and actual results.
  H5 (confidence 0.700): Hypothesis H5: The failure may be caused by an incorrect implementation of the mean calculation in the PoissonDistribution class, leading to discrepancies between expected and actual results.
Ignoring 8 covered classes without method coverage
    ▶️ GPT[class pre-ranking] running 1 prompts
  📊 GPT[class_pre_rank org.apache.commons.math.distribution.PoissonDistributionImpl] tokens: 559 prompt + 61 completion = 620 total
    ✅ GPT[class pre-ranking] completed; taking top 5
Candidate classes:
  org.apache.commons.math.distribution.PoissonDistributionImpl: n/a ```json
{
  "score": 0.9,
  "reason": "The failure occurs due to the PoissonDistributionImpl constructor not handling negative means correctly, as evidenced by the exception thrown. Fixing the constructor to properly handle or document this case is likely the best solution."
}
```
Collected 2 methods across candidate classes
    ▶️ GPT[method pre-ranking] running 2 prompts
  📊 GPT[method_pre_rank org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double)] tokens: 603 prompt + 71 completion = 674 total
  📊 GPT[method_pre_rank org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int)] tokens: 670 prompt + 71 completion = 741 total
    ✅ GPT[method pre-ranking] completed
Selected 2 candidate methods
  📊 GPT[class_score org.apache.commons.math.distribution.PoissonDistributionImpl H1] tokens: 371 prompt + 3 completion = 374 total
  📊 GPT[class_explanation org.apache.commons.math.distribution.PoissonDistributionImpl H1] tokens: 349 prompt + 103 completion = 452 total
  📊 GPT[class_score org.apache.commons.math.distribution.PoissonDistributionImpl H2] tokens: 356 prompt + 3 completion = 359 total
  📊 GPT[class_explanation org.apache.commons.math.distribution.PoissonDistributionImpl H2] tokens: 334 prompt + 110 completion = 444 total
  📊 GPT[class_score org.apache.commons.math.distribution.PoissonDistributionImpl H3] tokens: 373 prompt + 3 completion = 376 total
  📊 GPT[class_explanation org.apache.commons.math.distribution.PoissonDistributionImpl H3] tokens: 351 prompt + 111 completion = 462 total
  📊 GPT[class_score org.apache.commons.math.distribution.PoissonDistributionImpl H4] tokens: 356 prompt + 3 completion = 359 total
  📊 GPT[class_explanation org.apache.commons.math.distribution.PoissonDistributionImpl H4] tokens: 334 prompt + 128 completion = 462 total
  📊 GPT[class_score org.apache.commons.math.distribution.PoissonDistributionImpl H5] tokens: 356 prompt + 3 completion = 359 total
  📊 GPT[class_explanation org.apache.commons.math.distribution.PoissonDistributionImpl H5] tokens: 334 prompt + 112 completion = 446 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H1] tokens: 445 prompt + 3 completion = 448 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H1] tokens: 423 prompt + 117 completion = 540 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H1] tokens: 512 prompt + 3 completion = 515 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H1] tokens: 445 prompt + 112 completion = 557 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H2] tokens: 430 prompt + 3 completion = 433 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H2] tokens: 408 prompt + 103 completion = 511 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H2] tokens: 497 prompt + 3 completion = 500 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H2] tokens: 430 prompt + 116 completion = 546 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H3] tokens: 447 prompt + 3 completion = 450 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H3] tokens: 425 prompt + 115 completion = 540 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H3] tokens: 514 prompt + 3 completion = 517 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H3] tokens: 447 prompt + 122 completion = 569 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H4] tokens: 430 prompt + 3 completion = 433 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H4] tokens: 408 prompt + 116 completion = 524 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H4] tokens: 497 prompt + 3 completion = 500 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H4] tokens: 430 prompt + 103 completion = 533 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H5] tokens: 430 prompt + 3 completion = 433 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double) H5] tokens: 408 prompt + 106 completion = 514 total
  📊 GPT[method_score org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H5] tokens: 497 prompt + 3 completion = 500 total
  📊 GPT[method_explanation org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int) H5] tokens: 430 prompt + 119 completion = 549 total

Top suspicious methods:
  1. org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double): 0.900 — best hypothesis H5: Hypothesis H5: The failure may be caused by an incorrect implementation of the mean calculation in the PoissonDistribution class, leading to discrepancies between expected and actual results. (confidence 0.700); supporting class org.apache.commons.math.distribution.PoissonDistributionImpl (HH4)
      explanation: The method `PoissonDistributionImpl(double p)` requires the mean value `p` to be positive, throwing an `IllegalArgumentException` if `p <= 0`. This behavior directly contradicts Hypothesis H5, as the failure is not due to an incorrect me...
  2. org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(double,double,int): 0.100 — best hypothesis H1: H1: The failure in "org.apache.commons.math.distribution.PoissonDistributionTest::testMean" could be due to an incorrect implementation of the mean calculation in the PoissonDistribution class, leading to discrepancies between expected and actual results. (confidence 0.700); supporting class org.apache.commons.math.distribution.PoissonDistributionImpl (HH4)
      explanation: The method `PoissonDistributionImpl(double p, double epsilon, int maxIterations)` explicitly checks if the mean `p` is less than or equal to zero and throws an `IllegalArgumentException` if this condition is met. This behavior supports t...

📊 Token Usage Summary:
  Total API calls: 43
  Total tokens: 17,344
  Prompt tokens: 15,186
  Completion tokens: 2,158
Results written to defects4j_batch_results/Math-61_parallel_case/Math-61_parallel_answer.csv
Token usage written to defects4j_batch_results/Math-61_parallel_case/Math-61_token_usage.csv
Summary written to defects4j_batch_results/Math-61_parallel_case/Math-61_parallel_summary.md
