=== GPT-only pipeline for Math-92 ===
  📊 GPT[hypothesis H1] tokens: 76 prompt + 40 completion = 116 total
  📊 GPT[hypothesis H2] tokens: 76 prompt + 27 completion = 103 total
  📊 GPT[hypothesis H3] tokens: 76 prompt + 29 completion = 105 total
  📊 GPT[hypothesis H4] tokens: 76 prompt + 27 completion = 103 total
  📊 GPT[hypothesis H5] tokens: 76 prompt + 27 completion = 103 total
  📊 GPT[hypothesis_confidence H1] tokens: 101 prompt + 3 completion = 104 total
  📊 GPT[hypothesis_confidence H2] tokens: 88 prompt + 3 completion = 91 total
  📊 GPT[hypothesis_confidence H3] tokens: 90 prompt + 3 completion = 93 total
  📊 GPT[hypothesis_confidence H4] tokens: 88 prompt + 3 completion = 91 total
  📊 GPT[hypothesis_confidence H5] tokens: 88 prompt + 3 completion = 91 total
Hypotheses:
  H1 (confidence 0.900): H1: The failure in "org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge" could be due to integer overflow when calculating large binomial coefficients, resulting in incorrect values.
  H2 (confidence 0.700): Hypothesis H2: The failure may be caused by an integer overflow occurring when calculating large binomial coefficients, leading to incorrect results.
  H3 (confidence 0.700): Hypothesis H3: The failure may be caused by an integer overflow occurring during the computation of large binomial coefficients, leading to incorrect results.
  H4 (confidence 0.700): Hypothesis H4: The failure may be caused by an integer overflow occurring when calculating large binomial coefficients, leading to incorrect results.
  H5 (confidence 0.700): Hypothesis H5: The failure may be caused by an integer overflow occurring when calculating large binomial coefficients, leading to incorrect results.
    ▶️ GPT[class pre-ranking] running 1 prompts
  📊 GPT[class_pre_rank org.apache.commons.math.util.MathUtils] tokens: 650 prompt + 60 completion = 710 total
    ✅ GPT[class pre-ranking] completed; taking top 5
Candidate classes:
  org.apache.commons.math.util.MathUtils: 0.900 {"score": 0.9, "reason": "The failure occurs in the 'binomialCoefficient' method of 'MathUtils', as evidenced by the incorrect result for large inputs. The method is directly responsible for computing binomial coefficients, making it the most likely location for the bug."}
Collected 5 methods across candidate classes
    ▶️ GPT[method pre-ranking] running 5 prompts
  📊 GPT[method_pre_rank org.apache.commons.math.util.MathUtils.addAndCheck(long,long)] tokens: 611 prompt + 86 completion = 697 total
  📊 GPT[method_pre_rank org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String)] tokens: 630 prompt + 77 completion = 707 total
  📊 GPT[method_pre_rank org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int)] tokens: 684 prompt + 61 completion = 745 total
  📊 GPT[method_pre_rank org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int)] tokens: 634 prompt + 73 completion = 707 total
  📊 GPT[method_pre_rank org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int)] tokens: 690 prompt + 84 completion = 774 total
    ✅ GPT[method pre-ranking] completed
Selected 5 candidate methods
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H1] tokens: 450 prompt + 3 completion = 453 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H1] tokens: 429 prompt + 124 completion = 553 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H2] tokens: 437 prompt + 3 completion = 440 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H2] tokens: 416 prompt + 160 completion = 576 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H3] tokens: 439 prompt + 3 completion = 442 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H3] tokens: 418 prompt + 130 completion = 548 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H4] tokens: 437 prompt + 3 completion = 440 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H4] tokens: 416 prompt + 128 completion = 544 total
  📊 GPT[class_score org.apache.commons.math.util.MathUtils H5] tokens: 437 prompt + 3 completion = 440 total
  📊 GPT[class_explanation org.apache.commons.math.util.MathUtils H5] tokens: 416 prompt + 129 completion = 545 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H1] tokens: 586 prompt + 3 completion = 589 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H1] tokens: 459 prompt + 131 completion = 590 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H1] tokens: 483 prompt + 3 completion = 486 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H1] tokens: 462 prompt + 138 completion = 600 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H1] tokens: 590 prompt + 3 completion = 593 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H1] tokens: 466 prompt + 134 completion = 600 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H1] tokens: 457 prompt + 3 completion = 460 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H1] tokens: 433 prompt + 139 completion = 572 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H1] tokens: 476 prompt + 3 completion = 479 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H1] tokens: 452 prompt + 122 completion = 574 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H2] tokens: 573 prompt + 3 completion = 576 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H2] tokens: 446 prompt + 127 completion = 573 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H2] tokens: 470 prompt + 3 completion = 473 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H2] tokens: 449 prompt + 127 completion = 576 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H2] tokens: 577 prompt + 3 completion = 580 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H2] tokens: 453 prompt + 136 completion = 589 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H2] tokens: 444 prompt + 3 completion = 447 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H2] tokens: 420 prompt + 129 completion = 549 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H2] tokens: 463 prompt + 3 completion = 466 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H2] tokens: 439 prompt + 135 completion = 574 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H3] tokens: 575 prompt + 3 completion = 578 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H3] tokens: 448 prompt + 106 completion = 554 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H3] tokens: 472 prompt + 3 completion = 475 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H3] tokens: 451 prompt + 139 completion = 590 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H3] tokens: 579 prompt + 3 completion = 582 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H3] tokens: 455 prompt + 141 completion = 596 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H3] tokens: 446 prompt + 3 completion = 449 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H3] tokens: 422 prompt + 125 completion = 547 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H3] tokens: 465 prompt + 3 completion = 468 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H3] tokens: 441 prompt + 116 completion = 557 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H4] tokens: 573 prompt + 3 completion = 576 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H4] tokens: 446 prompt + 117 completion = 563 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H4] tokens: 470 prompt + 3 completion = 473 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H4] tokens: 449 prompt + 167 completion = 616 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H4] tokens: 577 prompt + 3 completion = 580 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H4] tokens: 453 prompt + 136 completion = 589 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H4] tokens: 444 prompt + 3 completion = 447 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H4] tokens: 420 prompt + 138 completion = 558 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H4] tokens: 463 prompt + 3 completion = 466 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H4] tokens: 439 prompt + 114 completion = 553 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H5] tokens: 573 prompt + 3 completion = 576 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int) H5] tokens: 446 prompt + 127 completion = 573 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H5] tokens: 470 prompt + 3 completion = 473 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int) H5] tokens: 449 prompt + 108 completion = 557 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H5] tokens: 577 prompt + 3 completion = 580 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int) H5] tokens: 453 prompt + 127 completion = 580 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H5] tokens: 444 prompt + 3 completion = 447 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long) H5] tokens: 420 prompt + 123 completion = 543 total
  📊 GPT[method_score org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H5] tokens: 463 prompt + 3 completion = 466 total
  📊 GPT[method_explanation org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String) H5] tokens: 439 prompt + 137 completion = 576 total

Top suspicious methods:
  1. org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int): 0.900 — best hypothesis H1: H1: The failure in "org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge" could be due to integer overflow when calculating large binomial coefficients, resulting in incorrect values. (confidence 0.900); supporting class org.apache.commons.math.util.MathUtils (HH1)
      explanation: The method `org.apache.commons.math.util.MathUtils.binomialCoefficient(int, int)` returns a `long`, which can lead to integer overflow when calculating large binomial coefficients, as the `long` type has a maximum value of 2^63-1. In the...
  2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int): 0.800 — best hypothesis H1: H1: The failure in "org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge" could be due to integer overflow when calculating large binomial coefficients, resulting in incorrect values. (confidence 0.900); supporting class org.apache.commons.math.util.MathUtils (HH1)
      explanation: The method `org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int, int)` supports hypothesis H1. It calculates the binomial coefficient using a logarithmic approach and returns a `double`, which can handle larger values wi...
  3. org.apache.commons.math.util.MathUtils.addAndCheck(long,long): 0.800 — best hypothesis H2: Hypothesis H2: The failure may be caused by an integer overflow occurring when calculating large binomial coefficients, leading to incorrect results. (confidence 0.700); supporting class org.apache.commons.math.util.MathUtils (HH1)
      explanation: The method `org.apache.commons.math.util.MathUtils.addAndCheck(long, long)` supports Hypothesis H2 by providing a mechanism to detect integer overflow during addition operations. When calculating large binomial coefficients, intermediate...
  4. org.apache.commons.math.util.MathUtils.addAndCheck(long,long,String): 0.800 — best hypothesis H3: Hypothesis H3: The failure may be caused by an integer overflow occurring during the computation of large binomial coefficients, leading to incorrect results. (confidence 0.700); supporting class org.apache.commons.math.util.MathUtils (HH1)
      explanation: The method `org.apache.commons.math.util.MathUtils.addAndCheck(long, long, String)` supports Hypothesis H3 by providing a mechanism to detect and handle integer overflow during arithmetic operations. In the context of computing large bin...
  5. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int): 0.700 — best hypothesis H5: Hypothesis H5: The failure may be caused by an integer overflow occurring when calculating large binomial coefficients, leading to incorrect results. (confidence 0.700); supporting class org.apache.commons.math.util.MathUtils (HH1)
      explanation: The method `org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int, int)` calculates the natural logarithm of the binomial coefficient, which inherently avoids integer overflow by working in the logarithmic domain. This suppor...

📊 Token Usage Summary:
  Total API calls: 76
  Total tokens: 37,455
  Prompt tokens: 32,849
  Completion tokens: 4,606
Results written to defects4j_batch_results/Math-92_parallel_case/Math-92_parallel_answer.csv
Token usage written to defects4j_batch_results/Math-92_parallel_case/Math-92_token_usage.csv
Summary written to defects4j_batch_results/Math-92_parallel_case/Math-92_parallel_summary.md
